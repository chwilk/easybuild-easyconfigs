name = 'ipp'
version = '7.1.1.117'


homepage = 'http://software.intel.com/en-us/articles/intel-ipp/'
description = """Intel Integrated Performance Primitives (Intel IPP) is an extensive library
 of multicore-ready, highly optimized software functions for multimedia, data processing,
 and communications applications. Intel IPP offers thousands of optimized functions
 covering frequently used fundamental algorithms."""

toolchain = {'name': 'dummy', 'version': 'dummy'}

sources = ['l_ipp_%s.tgz' % version]

patches = ['ipp_productsdb.patch']

moduleclass = 'perf'

dontcreateinstalldir = 'True'

# license file
import os
license_file = os.path.join(os.getenv('HOME'), "licenses", "intel", "license.lic")

# disable/change check for ipp/lib/intel64/libippvc.a (installed is libippvc_l.a)
sanity_check_paths = {
                        'files': ["ipp/lib/intel64/libipp%s" % y
                                   for x in ["ac", "cc", "ch", "core", "cv", "dc", "di",
                                             "i", "j", "m", "r", "s", "sc", "vc", "vm"]
                                   for y in ["%s_l.a" % x, "%s.so" % x]],
                        'dirs': ["compiler/lib/intel64", "ipp/bin", "ipp/include",
                                 "ipp/interfaces/data-compression", "ipp/tools/intel64"]
                       }

